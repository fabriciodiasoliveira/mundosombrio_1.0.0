version: 2 # use CircleCI 2.0

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker 
      - image: circleci/php:5.6-node-browsers # ...with this image as the primary container; this is where all `steps` will run
    working_directory: ~/laravel # directory where steps will run
    steps: # a set of executable commands
      - checkout # special step to check out source code to working directory
      - run: sudo apt install -y libsqlite3-dev zlib1g-dev
      #- run: sudo apt install -y lftp
      #- run: sudo docker-php-ext-install zip
      #- run: sudo composer self-update
      #- restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
      #    keys:
      #      - composer-v1-{{ checksum "composer.lock" }}
      #      # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
      #      - composer-v1-
      #- run: composer update #install -n --prefer-source
      #- save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
      #    key: composer-v1-{{ checksum "composer.lock" }}
      #    paths:
      #      - vendor
      #- restore_cache: # special step to restore the dependency cache if `package-lock.json` does not change
      #    keys:
      #      - node-v1-{{ checksum "package-lock.json" }}
      #      # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
      #      - node-v1-
      #- run: yarn install
      #- save_cache: # special step to save the dependency cache with the `package-lock.json` cache key template
      #-   key: node-v1-{{ checksum "package-lock.json" }}
      #    paths:
      #      - node_modules
      - run: tar -czvf preparado.tar.gz app resources routes config database
      #- run: scp prep* fabricioweb@fabricioweb.net:~/
      #- run: touch storage/testing.sqlite 
      #- run: php artisan migrate --env=testing --database=sqlite_testing --force
      #- run: ./vendor/bin/codecept build
      #- run: ./vendor/bin/codecept run
      - store_artifacts: # store the uberjar as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: preparado.tar.gz
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      #- run: lftp -u fabricioweb,Devanon1 -e "mirror -c;quit" ftp.fabricioweb.net
